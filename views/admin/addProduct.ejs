<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard - Add Product</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #1e1e1e, #2a2a2a);
            color: #e0e0e0;
            display: flex;
            min-height: 100vh;
            overflow-x: hidden;
        }

        /* Sidebar */
        .sidebar {
            width: 250px;
            background: #1a1a1a;
            padding: 25px;
            position: fixed;
            height: 100vh;
            top: 0;
            left: 0;
            transition: transform 0.3s ease;
            box-shadow: 4px 0 20px rgba(0, 0, 0, 0.6);
            z-index: 1000;
        }

        .sidebar h2 {
            text-align: center;
            margin-bottom: 35px;
            color: #00d4ff;
            font-size: 26px;
            font-weight: 600;
            letter-spacing: 1.5px;
        }

        .sidebar a {
            display: flex;
            align-items: center;
            color: #b0b0b0;
            text-decoration: none;
            padding: 12px 15px;
            margin: 10px 0;
            border-radius: 10px;
            transition: all 0.3s ease;
            font-size: 16px;
        }

        .sidebar a:hover, .sidebar a.active {
            background: #00d4ff;
            color: #1a1a1a;
            transform: translateX(8px);
            box-shadow: 0 4px 15px rgba(0, 212, 255, 0.3);
        }

        /* Hamburger Menu */
        .hamburger {
            display: none;
            font-size: 28px;
            background: none;
            border: none;
            color: #00d4ff;
            cursor: pointer;
            padding: 10px;
            position: fixed;
            top: 15px;
            left: 15px;
            z-index: 1100;
            transition: color 0.3s ease;
        }

        .hamburger:hover {
            color: #00aaff;
        }

        /* Content Area */
        .content {
            margin-left: 250px;
            padding: 40px;
            width: calc(100% - 250px);
            transition: all 0.3s ease;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        h1 {
            color: #00d4ff;
            text-align: center;
            margin-bottom: 30px;
            font-weight: 600;
            font-size: 32px;
            text-shadow: 0 2px 10px rgba(0, 212, 255, 0.3);
        }

        /* Form Container */
        .form-container {
            max-width: 900px;
            width: 100%;
            padding: 30px;
            background: #252525;
            border-radius: 15px;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.5);
            transition: transform 0.3s ease;
        }

        .form-container:hover {
            transform: translateY(-8px);
        }

        .form-container h2 {
            color: #e0e0e0;
            text-align: center;
            font-size: 24px;
            margin-bottom: 25px;
            font-weight: 600;
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            font-weight: 600;
            display: block;
            margin-bottom: 5px;
            color: #b0b0b0;
            font-size: 14px;
            text-align: left;
        }

        input, textarea, select {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid #444;
            border-radius: 10px;
            background: #333333;
            color: #e0e0e0;
            font-size: 15px;
            outline: none;
            transition: all 0.3s ease;
        }

        textarea {
            resize: vertical;
            min-height: 80px;
        }

        input:focus, textarea:focus, select:focus {
            border-color: #00d4ff;
            background: #fff;
            color: #1a1a1a;
            box-shadow: 0 0 8px rgba(0, 212, 255, 0.4);
        }

        /* Image Upload and Cropper */
        #cropperContainers {
            margin-top: 20px;
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
        }

        .crop-container {
            background: #333333;
            padding: 10px;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
        }

        .crop-container img {
            max-width: 300px;
            max-height: 200px;
            border-radius: 5px;
        }

        .crop-container button, #upload + button {
            padding: 10px 15px;
            background: #6b48ff;
            color: #fff;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 600;
            margin-top: 10px;
            transition: all 0.3s ease;
            box-shadow: 0 4px 10px rgba(107, 72, 255, 0.3);
        }

        .crop-container button:hover, #upload + button:hover {
            background: #5636d9;
            transform: scale(1.05);
            box-shadow: 0 6px 15px rgba(107, 72, 255, 0.5);
        }

        button[type="submit"] {
            width: 100%;
            padding: 12px 20px;
            background: #6b48ff;
            color: #fff;
            border: none;
            border-radius: 25px;
            cursor: pointer;
            font-size: 16px;
            font-weight: 600;
            margin-top: 25px;
            transition: all 0.3s ease;
            box-shadow: 0 4px 10px rgba(107, 72, 255, 0.3);
        }

        button[type="submit"]:hover {
            background: #5636d9;
            transform: scale(1.05);
            box-shadow: 0 6px 15px rgba(107, 72, 255, 0.5);
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .sidebar {
                width: 100%;
                height: auto;
                transform: translateX(-100%);
            }

            .sidebar.active {
                transform: translateX(0);
            }

            .content {
                margin-left: 0;
                padding: 20px;
            }

            .hamburger {
                display: block;
            }

            .form-container {
                padding: 20px;
            }

            input, textarea, select {
                font-size: 14px;
            }

            button {
                font-size: 14px;
            }

            .crop-container img {
                max-width: 100%;
                max-height: 150px;
            }

            #cropperContainers {
                flex-direction: column;
                gap: 15px;
            }
        }
    </style>
</head>
<body>
    <button class="hamburger">â˜°</button>
    <div class="sidebar">
        <h2>Add Product</h2>
        <a href="/admin/dashboard">Dashboard</a>
        <a href="/admin/userManagement">Manage Users</a>
        <a href="/admin/CategoryManagement">Category Management</a>
        <a href="/admin/productManagement" class="active">Product Management</a>
        <a href="/admin/ordermanagment">Order Management</a>
        <a href="/admin/coupenMenagement">Coupon Management</a>
        <a href="/admin/SalesReport">Sales Report</a>
        <a href="/admin/AdminReturnRequest">Return Management</a>
        <a href="/admin/logout">Logout</a>
    </div>

    <div class="content">
        <h1>Add Product</h1>
        <div class="form-container">
            <h2>Add New Product</h2>
            <form id="addproduct">
                <div class="form-group">
                    <label for="name">Name:</label>
                    <input type="text" id="name" name="name" placeholder="Enter name" required>
                </div>

                <div class="form-group">
                    <label for="description">Description:</label>
                    <textarea id="description" name="description" rows="3" placeholder="Enter description" required></textarea>
                </div>

                <div class="form-group">
                    <label for="brand">Brand:</label>
                    <input type="text" id="brand" name="brand" placeholder="Enter Brand" required>
                </div>

                <div class="form-group">
                    <label for="category">Category:</label>
                    <select id="category" name="category" required>
                        <option value="sofa">Sofa</option>
                        <option value="chair">Chair</option>
                    </select>
                </div>

                <div class="form-group">
                    <label for="salePrice">Sale Price:</label>
                    <input type="number" id="salePrice" name="salePrice" placeholder="Enter Sale Price" required>
                </div>

                <div class="form-group">
                    <label for="productOffer">Product Offer:</label>
                    <input type="number" id="productOffer" name="productOffer" placeholder="Enter Product Offer" required>
                </div>

                <div class="form-group">
                    <label for="stock">Stock:</label>
                    <input type="number" id="stock" name="stock" placeholder="Enter Stock" required>
                </div>

                <div class="form-group">
                    <label for="status">Status:</label>
                    <select id="status" name="status" required>
                        <option value="Available">Available</option>
                        <option value="out of stock">Out of Stock</option>
                        <option value="Discontinued">Discontinued</option>
                    </select>
                </div>

                <div class="form-group">
                    <label for="upload">Choose Images:</label>
                    <input type="file" id="upload" multiple onchange="handleImage(event)" />
                    <div id="cropperContainers"></div>
                </div>

                <button type="submit">Add Product</button>
            </form>
        </div>
    </div>

    <script>
        let croppers = {};
        let croppedImages = [];

        const handleImage = (e) => {
            const files = e.target.files;
            console.log("Selected Files: ", files);

            const cropperContainers = document.getElementById("cropperContainers");
            cropperContainers.innerHTML = "";

            for (let i = 0; i < files.length; i++) {
                const file = files[i];
                const reader = new FileReader();

                const cropperContainer = document.createElement('div');
                cropperContainer.id = `cropperContainer${i}`;
                cropperContainer.className = 'crop-container';
                cropperContainers.appendChild(cropperContainer);

                const img = document.createElement('img');
                img.id = `cropImage${i}`;
                cropperContainer.appendChild(img);

                const saveButton = document.createElement('button');
                saveButton.textContent = 'Save Cropped Image';
                saveButton.id = `saveButton${i}`;
                saveButton.type = 'button';
                cropperContainer.appendChild(saveButton);

                reader.onload = function () {
                    img.src = reader.result;

                    if (croppers[i]) croppers[i].destroy();

                    croppers[i] = new Cropper(img, {
                        aspectRatio: 1,
                        viewMode: 1,
                        autoCropArea: 1,
                    });

                    saveButton.onclick = function () {
                        const croppedCanvas = croppers[i].getCroppedCanvas({
                            width: 600,
                            height: 600
                        });

                        const fileExtension = file.name.split('.').pop();

                        croppedCanvas.toBlob(function (blob) {
                            const url = URL.createObjectURL(blob);
                            img.src = url;
                            img.dataset.blob = blob;

                            croppedImages.push(blob);
                            console.log("Cropped Images Array: ", croppedImages);

                            const croppedImagePreview = document.createElement('img');
                            croppedImagePreview.src = url;
                            croppedImagePreview.style.width = '200px';
                            croppedImagePreview.style.height = '200px';
                            cropperContainer.innerHTML = '';
                            cropperContainer.appendChild(croppedImagePreview);

                            const reCropButton = document.createElement('button');
                            reCropButton.textContent = 'Re-Crop This Image';
                            reCropButton.type = 'button';
                            cropperContainer.appendChild(reCropButton);

                            reCropButton.onclick = function () {
                                img.src = url;
                                croppers[i].destroy();
                                croppers[i] = new Cropper(img, {
                                    aspectRatio: 1,
                                    viewMode: 1,
                                    autoCropArea: 1,
                                });
                                cropperContainer.innerHTML = '';
                                cropperContainer.appendChild(img);
                                cropperContainer.appendChild(saveButton);
                            };
                        }, `image/${fileExtension}`, 0.7);
                    };
                };

                reader.readAsDataURL(file);
            }
        };

        document.getElementById("addproduct").addEventListener("submit", async function(e) {
            e.preventDefault();

            const name = document.getElementById("name").value;
            const description = document.getElementById("description").value;
            const brand = document.getElementById("brand").value;
            const category = document.getElementById("category").value;
            const salePrice = document.getElementById("salePrice").value;
            const productOffer = document.getElementById("productOffer").value;
            const stock = document.getElementById("stock").value;
            const status = document.getElementById("status").value;
            const imageFiles = document.getElementById("upload").files;

            const formData = new FormData();
            formData.append("name", name);
            formData.append("description", description);
            formData.append("brand", brand);
            formData.append("category", category);
            formData.append("salePrice", salePrice);
            formData.append("productOffer", productOffer);
            formData.append("stock", stock);
            formData.append("status", status);
            croppedImages.forEach((image) => {
                formData.append("productImages", image);
            });

            try {
                const response = await fetch("/admin/addproduct", {
                    method: 'POST',
                    body: formData,
                });

                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }

                const data = await response.json();

                Swal.fire({
                    title: 'Success!',
                    text: 'Product added successfully!',
                    icon: 'success',
                    background: '#252525',
                    color: '#e0e0e0',
                    confirmButtonColor: '#00d4ff',
                    confirmButtonText: 'OK'
                }).then(() => {
                    window.location.href = '/admin/productManagement';
                });
            } catch (error) {
                Swal.fire({
                    title: 'Error!',
                    text: 'Something went wrong. Please try again.',
                    icon: 'error',
                    background: '#252525',
                    color: '#e0e0e0',
                    confirmButtonColor: '#ff6f61',
                    confirmButtonText: 'OK'
                });
                console.error('Error:', error);
            }
        });
    </script>
</body>
</html>