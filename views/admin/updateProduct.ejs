    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Update Product</title>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css">
        <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
        
        <style>

            body {
                font-family: Arial, sans-serif;
                margin: 0;
                padding: 0;
                background-color: #f4f4f4;
            }
            
            
        .image-container {
            position: relative;
            display: inline-block;
        }

        .preview-image {
            width: 100px;
            height: 100px;
            object-fit: cover;
            border-radius: 8px;
            border: 1px solid #ddd;
        }

        .delete-button {
            position: absolute;
            top: 5px;
            right: 5px;
            background-color: #ff4d4d;
            color: white;
            border: none;
            border-radius: 50%;
            width: 25px;
            height: 25px;
            font-size: 14px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
        }

        .delete-button:hover {
            background-color: #e60000;
        }



            .container {
                max-width: 600px;
                margin: 50px auto;
                background: #fff;
                padding: 20px;
                border-radius: 8px;
                box-shadow: 0 2px 10px rgb(30, 255, 1);
            }

            h1 {
                text-align: center;
                margin-bottom: 20px;
            }

            form {
                display: flex;
                flex-direction: column;
            }

            label {
                margin-bottom: 8px;
                font-weight: bold;
            }

            input, select, textarea, button {
                margin-bottom: 15px;
                padding: 10px;
                font-size: 16px;
                border: 1px solid #ddd;
                border-radius: 4px;
            }

            button {
                background-color: #007BFF;
                color: #fff;
                border: none;
                cursor: pointer;
                transition: background-color 0.3s;
            }

            button:hover {
                background-color: #0056b3;
            }
        </style>
    <link href="/admin/dashbord.css" rel="stylesheet"> 
    </head>
    <body>
        <div class="sidebar">
            <h2>Admin Dashboard</h2>
            <a href="/admin/dashboard">Dashboard</a>
            <a href="/admin/userManagement">Manage Users</a>
            <a href="/admin/CategoryManagement">Category Management</a>
            <a href="/admin/productManagement">product Management</a>
            <a href="/admin/ordermanagment">order Management</a>
            <a href="/admin/logout">Logout</a>
        </div>
        <div class="container">
            <h1>Update Product</h1>
            <form id="updateProduct" enctype="multipart/form-data" method="POST">

                <!-- Name -->
                <label for="name">Name</label>
                <input type="text" id="name" name="name" value="<%= findUPproduct.productName %>" required>

                <!-- Description -->
                <label for="description">Description</label>
                <textarea id="description" name="description" rows="4" required><%= findUPproduct.description %></textarea>

                <!-- Brand -->
                <label for="brand">Brand</label>
                <input type="text" id="brand" name="brand" value="<%= findUPproduct.brand %>" required>

                <!-- Category -->
                <label for="category">Category</label>
                
                <input type="text" id="categoryDisplay" name="categoryDisplay" value="<%= findUPproduct.category.name %>" readonly>

                <!-- Sale Price -->
                <label for="salePrice">Sale Price</label>
                <input type="number" id="salePrice" name="salePrice" value="<%= findUPproduct.salePrice %>" required>

                <!-- Product Offer -->
                <label for="productOffer">Product Offer</label>
                <input type="text" id="productOffer" name="productOffer" value="<%= findUPproduct.productOffer %>">

                <!-- Stock -->
                <label for="stock">Stock</label>
                <input type="number" id="stock" name="stock" value="<%= findUPproduct.quantity %>" required>

                <!-- Product Images -->
                <label for="productImages">Upload Images (Select at least 3):</label>
                <div id="imagePreview">
                    <% if (findUPproduct.productImages.length > 0) { %>
                        <% findUPproduct.productImages.forEach(image => { %>
                        
                                <div class="image-container">
                                    <img src="/uploads/<%= image %>" alt="Product Image" class="preview-image">
                                    <button class="delete-button" onclick="deleteImage('<%= findUPproduct._id %>', '<%= image %>')">Delete</button>
                                </div>
                        
                        <% }); %>
                    <% } else { %>
                        <p>No images available for this product.</p>
                    <% } %>
                </div>
                <!-- File Upload -->
    <input type="file" id="upload" multiple accept="image/*" onchange="handleImage(event)" />

    <!-- Image Cropping Container -->
    <div id="cropperContainer" style="display: none;">
        <img id="cropImage" alt="Image to crop">
        <button type="button" id="cropButton" class="btn btn-primary">Crop & Save</button>
    </div>


                <!-- Status -->
                <label for="status">Status:</label>
                <select id="status" name="status" required>
                    <option value="Available" <%= findUPproduct.status === 'Available' ? 'selected' : '' %>>Available</option>
                    <option value="out of stock" <%= findUPproduct.status === 'out of stock' ? 'selected' : '' %>>Out of Stock</option>
                    <option value="Discontinued" <%= findUPproduct.status === 'Discontinued' ? 'selected' : '' %>>Discontinued</option>
                </select>

                <!-- Submit Button -->
                <button type="submit" id="updateProduct">Update Product</button>
            </form>
            <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    </div>
    <script>
let cropper;
const cropperContainer = document.getElementById("cropperContainer");
const cropImage = document.getElementById("cropImage");
const cropButton = document.getElementById("cropButton");
const croppedImages = []; // To store cropped image files

function handleImage(event) {
    const file = event.target.files[0];
    if (file) {
        const reader = new FileReader();
        reader.onload = (e) => {
            cropImage.src = e.target.result;
            cropperContainer.style.display = "block";

            // Initialize Cropper.js
            if (cropper) {
                cropper.destroy();
            }
            cropper = new Cropper(cropImage, {
                aspectRatio: 1, // Adjust as needed
                viewMode: 2,
                autoCropArea: 1,
            });
        };
        reader.readAsDataURL(file);
    }
}

cropButton.addEventListener("click", () => {
    const croppedCanvas = cropper.getCroppedCanvas({
        width: 300,
        height: 300,
    });

    // Convert canvas to Blob
    croppedCanvas.toBlob((blob) => {
        // Create a File instance from the Blob
        const file = new File([blob], `cropped_image_${Date.now()}.jpg`, { type: blob.type });

        // Append the file to the croppedImages array
        croppedImages.push(file);

        // Optionally preview the cropped image
        const previewImage = document.createElement("img");
        previewImage.src = URL.createObjectURL(blob);
        previewImage.classList.add("preview-image");
        document.getElementById("imagePreview").appendChild(previewImage);

        // Hide the cropper container
        cropperContainer.style.display = "none";
        cropper.destroy();
        cropper = null;
    });
});
document.getElementById("updateProduct").addEventListener("submit", (e) => {
    e.preventDefault();

    const formData = new FormData();

    // Append other form fields
    formData.append("name", document.getElementById("name").value);
    formData.append("description", document.getElementById("description").value);
    formData.append("brand", document.getElementById("brand").value);
    formData.append("category", document.getElementById("categoryDisplay").value);
    formData.append("salePrice", document.getElementById("salePrice").value);
    formData.append("productOffer", document.getElementById("productOffer").value);
    formData.append("stock", document.getElementById("stock").value);
    formData.append("status", document.getElementById("status").value);

    // Append cropped images with the same key
    croppedImages.forEach((image) => {
        formData.append("productImages", image); // Use the same key
    });

    // Submit the form
    fetch("/admin/updateProduct/<%= findUPproduct._id %>", {
        method: "POST",
        body: formData,
    })
        .then((response) => {
            if (!response.ok) {
                throw new Error("Failed to update product");
            }
            return response.json();
        })
        .then(() => {
            Swal.fire({
                title: "Success!",
                text: "Product updated successfully!",
                icon: "success",
            }).then(() => {
                window.location.href = "/admin/productManagement";
            });
        })
        .catch((error) => {
            console.error("Error:", error);
            Swal.fire({
                title: "Error!",
                text: "Failed to update product. Please try again.",
                icon: "error",
            });
        });
});


    </script>
    </body>
    </html>
