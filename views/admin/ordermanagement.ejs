<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Management</title>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #1a1a1a, #2c2c2c);
            color: #fff;
            display: flex;
            min-height: 100vh;
        }

        /* Sidebar */
        .sidebar {
            width: 250px;
            background: #252525;
            padding: 20px;
            position: fixed;
            height: 100vh;
            top: 0;
            left: 0;
            transition: 0.3s ease;
            box-shadow: 4px 0 15px rgba(0, 0, 0, 0.5);
        }

        .sidebar h2 {
            text-align: center;
            margin-bottom: 30px;
            color: #00d4ff;
            font-size: 24px;
            letter-spacing: 1px;
        }

        .sidebar a {
            display: flex;
            align-items: center;
            color: #ddd;
            text-decoration: none;
            padding: 12px 15px;
            margin: 10px 0;
            border-radius: 8px;
            transition: all 0.3s ease;
            font-size: 16px;
        }

        .sidebar a:hover {
            background: #00d4ff;
            color: #1a1a1a;
            transform: translateX(5px);
        }

        /* Hamburger Menu */
        .hamburger {
            display: none;
            font-size: 24px;
            background: none;
            border: none;
            color: #fff;
            cursor: pointer;
            padding: 10px;
            position: fixed;
            top: 10px;
            left: 10px;
            z-index: 1100;
        }

        /* Content Area */
        .content {
            margin-left: 270px;
            padding: 30px;
            width: calc(100% - 270px);
            transition: 0.3s ease;
        }

        h1 {
            color: #00d4ff;
            text-align: center;
            margin-bottom: 20px;
            font-weight: 600;
            font-size: 28px;
        }

        .section {
            background: #2e2e2e;
            padding: 25px;
            border-radius: 12px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
            transition: transform 0.3s ease;
        }

        .section:hover {
            transform: translateY(-5px);
        }

        /* Search Bar */
        .search-bar {
            display: flex;
            gap: 10px;
            justify-content: center;
            margin-bottom: 20px;
            flex-wrap: wrap;
        }

        input[type="search"] {
            padding: 10px 15px;
            border-radius: 20px;
            background: #3a3a3a;
            color: #fff;
            border: none;
            outline: none;
            width: 300px;
            transition: all 0.3s ease;
            font-size: 16px;
        }

        input[type="search"]:focus {
            background: #fff;
            color: #1a1a1a;
        }

        /* Table Styling */
        .table-container {
            overflow-x: auto;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            background: #252525;
            border-radius: 12px;
            overflow: hidden;
        }

        th, td {
            padding: 14px;
            text-align: left;
            font-size: 16px;
        }

        th {
            background: #3a3a3a;
            color: #00d4ff;
            text-transform: uppercase;
            letter-spacing: 1px;
            font-weight: 600;
        }

        /* Prevent line breaks in the Date column (5th column) */
        th:nth-child(5), td:nth-child(5) {
            white-space: nowrap;
        }

        tr {
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            transition: background 0.3s ease;
        }

        tr:hover {
            background: rgba(255, 255, 255, 0.05);
        }

        td img {
            width: 80px;
            height: 80px;
            object-fit: cover;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
            transition: transform 0.3s ease;
        }

        td img:hover {
            transform: scale(1.1);
        }

        select {
            padding: 8px 15px;
            border-radius: 20px;
            background: #3a3a3a;
            color: #fff;
            border: none;
            outline: none;
            cursor: pointer;
            transition: background 0.3s ease;
            font-size: 14px;
        }

        select:hover {
            background: #00d4ff;
            color: #1a1a1a;
        }

        button {
            padding: 8px 15px;
            border: none;
            border-radius: 20px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 600;
            font-size: 14px;
            background: #6b48ff;
            color: #fff;
        }

        button:hover {
            background: #5636d9;
            transform: scale(1.05);
        }

        /* Pagination */
        #pagination-form {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 10px;
            margin-top: 20px;
            flex-wrap: wrap;
        }

        #pagination-form button {
            background: #00d4ff;
            color: #1a1a1a;
            padding: 10px 15px;
            font-size: 16px;
        }

        #pagination-form button:hover {
            background: #00aaff;
            transform: scale(1.05);
        }

        #pagination-form button:disabled {
            background: #3a3a3a;
            cursor: not-allowed;
            transform: none;
        }

        #page-number {
            padding: 8px 15px;
            background: #3a3a3a;
            border-radius: 20px;
            font-weight: 600;
            font-size: 16px;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .sidebar {
                width: 100%;
                height: auto;
                position: fixed;
                z-index: 1000;
                transform: translateX(-100%);
            }

            .sidebar.active {
                transform: translateX(0);
            }

            .content {
                margin-left: 0;
                width: 100%;
            }

            .hamburger {
                display: block;
            }

            input[type="search"] {
                width: 100%;
            }

            td img {
                width: 60px;
                height: 60px;
            }

            /* Ensure Date column remains readable on mobile */
            th:nth-child(5), td:nth-child(5) {
                font-size: 14px;
            }
        }
    </style>
</head>
<body>
    <button class="hamburger">â˜°</button>
    <div class="sidebar">
        <h2>Admin Dashboard</h2>
        <a href="/admin/dashboard">Dashboard</a>
        <a href="/admin/userManagement">Manage Users</a>
        <a href="/admin/CategoryManagement">Category Management</a>
        <a href="/admin/productManagement">Product Management</a>
        <a href="/admin/ordermanagment" class="active">Order Management</a>
        <a href="/admin/coupenMenagement">Coupon Management</a>
        <a href="/admin/SalesReport">Sales Report</a>
        <a href="/admin/AdminReturnRequest">Return Management</a>
        <a href="/admin/referralManagement" class="active">Referral Management</a>
        <a href="/admin/logout">Logout</a>
    </div>

    <div class="content">
        <div class="section">
            <h1>Order Management</h1>
            <div class="search-bar">
                <input type="search" placeholder="Search orders..." id="search">
            </div>

            <div class="table-container">
                <table>
                    <thead>
                        <tr>
                            <th>Customer Name</th>
                            <th>Email</th>
                            <th>Product</th>
                            <th>Address</th>
                            <th>Date</th>
                            <th>quty</th>
                            <th>Status</th>
                            <th>Amount</th>
                            <th>Payment</th>
                        </tr>
                    </thead>
                    <tbody>
                    
                        <% orders.forEach(order => { %>
                            <tr>
                                <td>
                                    <%= order.userDetails.username%>
                                  </td>
                                  
                                <td><%= order.userDetails ? order.userDetails.email : 'N/A' %></td>
                                <td>
                                    <%= order.productDetails ? order.productDetails.productName : 'N/A' %>
                                    <form action="/admin/showProduct/<%= order.productDetails ? order.productDetails._id : '' %>" method="post">
                                        <input type="hidden" name="cancelReason" value="<%= order._id %>">
                                        <button type="submit">
                                            <img src="/uploads/<%= (order.productDetails && order.productDetails.productImages.length > 0) ? order.productDetails.productImages[0] : 'default.jpg' %>" 
                                                 alt="<%= order.productDetails ? order.productDetails.productName : 'No Image' %>">
                                        </button>
                                    </form>
                                </td>
                                <td>
                                    <form action="/admin/userAddress/<%= order.userDetails?._id %>/<%= order.address %>">
                                        <button type="submit">View Address</button>
                                    </form>
                                </td>
                                <td><%= order.invoiceDate ? order.invoiceDate.toISOString().slice(0, 10) : 'N/A' %></td>
                                <td>
                                    <% order.orderedItems.forEach(item => { %>
                                        <div><%= item.quantity %></div>
                                    <% }) %>
                                </td>
                                <td>
                                    <form id="orderForm-<%= order._id %>" data-id="<%= order._id %>">
                                        <input type="hidden" value="<%= order._id %>" name="id">
                                        <select name="status" id="status-<%= order._id %>">
                                            <% 
                                                const statuses = ['paid', 'pending', 'Processing', 'shipped', 'Delivered', 'Cancelled', 'Returned','failed'];
                                                const selectedStatus = order?.status;
                                            %>
                                            <option value="<%= selectedStatus %>" selected><%= selectedStatus.charAt(0).toUpperCase() + selectedStatus.slice(1) %></option>
                                            <% statuses.forEach(status => { 
                                                if (status !== selectedStatus) { %>
                                                    <option value="<%= status %>"><%= status.charAt(0).toUpperCase() + status.slice(1) %></option>
                                            <% } }); %>
                                        </select>
                                    </form>
                                </td>
                                <td><%= order?.finalAmount %></td>
                                <td><%= order?.paymentType %></td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>
            </div>

            <form id="pagination-form" method="get" action="/admin/ordermanagment">
                <button type="button" id="prev-btn" onclick="Previous()">Previous</button>
                <span id="page-number"><%= currentPage %></span>
                <button type="button" id="next-btn" onclick="Next()">Next</button>
            </form>
        </div>
    </div>

    <script>
        // Hamburger menu toggle
        const hamburger = document.querySelector('.hamburger');
        const sidebar = document.querySelector('.sidebar');
        hamburger.addEventListener('click', () => {
            sidebar.classList.toggle('active');
        });

        // Status update
        document.addEventListener("DOMContentLoaded", () => {
            document.querySelectorAll("select[name='status']").forEach(select => {
                select.addEventListener("change", async (event) => {
                    event.preventDefault();

                    const orderId = event.target.closest("form").getAttribute("data-id");
                    const newStatus = event.target.value;

                    try {
                        const response = await fetch(`/admin/order/update/${orderId}`, {
                            method: "POST",
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify({ status: newStatus })
                        });

                        if (!response.ok) {
                            throw new Error(`Server responded with status: ${response.status}`);
                        }

                        const result = await response.json();

                        if (result.success || result.status === "success") {
                            Swal.fire({
                                title: "Success!",
                                text: "Order status updated successfully.",
                                icon: "success",
                                timer: 2000,
                                showConfirmButton: false,
                                background: '#252525',
                                color: '#e0e0e0',
                                confirmButtonColor: '#00d4ff'
                            });
                            event.target.value = newStatus;
                        } else {
                            throw new Error(result.message || "Unknown error occurred");
                        }
                    } catch (error) {
                        Swal.fire({
                            title: "Error!",
                            text: error.message || "Failed to update order status.",
                            icon: "error",
                            background: '#252525',
                            color: '#e0e0e0',
                            confirmButtonColor: '#ff6f61'
                        });
                        event.target.value = event.target.dataset.previousValue || event.target.value;
                    }

                    select.addEventListener("focus", (e) => {
                        e.target.dataset.previousValue = e.target.value;
                    }, { once: true });
                });
            });
        });

        // Pagination
        let currentPage = <%= currentPage %>;
        let totalPages = <%= totalPages %>;

        function updatePage(newPage) {
            if (newPage >= 1 && newPage <= totalPages) {
                window.location.href = `/admin/ordermanagment?page=${newPage}`;
            }
        }

        function Previous() {
            updatePage(currentPage - 1);
        }

        function Next() {
            updatePage(currentPage + 1);
        }

        document.addEventListener("DOMContentLoaded", () => {
            document.getElementById("prev-btn").disabled = currentPage <= 1;
            document.getElementById("next-btn").disabled = currentPage >= totalPages;
        });

        // Search functionality
        document.getElementById('search').addEventListener('input', function() {
            const searchQuery = this.value.toLowerCase();
            const rows = document.querySelectorAll('table tbody tr');

            rows.forEach(row => {
                const rowText = row.innerText.toLowerCase();
                if (rowText.includes(searchQuery)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        });
    </script>
</body>
</html>