<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sales Report</title>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #1e1e1e, #2a2a2a);
            color: #e0e0e0;
            display: flex;
            min-height: 100vh;
            overflow-x: hidden;
        }

        /* Sidebar */
        .sidebar {
            width: 250px;
            background: #1a1a1a;
            padding: 25px;
            position: fixed;
            height: 100vh;
            top: 0;
            left: 0;
            transition: transform 0.3s ease;
            box-shadow: 4px 0 20px rgba(0, 0, 0, 0.6);
            z-index: 1000;
        }

        .sidebar h2 {
            text-align: center;
            margin-bottom: 35px;
            color: #00d4ff;
            font-size: 26px;
            font-weight: 600;
            letter-spacing: 1.5px;
        }

        .sidebar a {
            display: flex;
            align-items: center;
            color: #b0b0b0;
            text-decoration: none;
            padding: 12px 15px;
            margin: 10px 0;
            border-radius: 10px;
            transition: all 0.3s ease;
            font-size: 16px;
        }

        .sidebar a:hover, .sidebar a.active {
            background: #00d4ff;
            color: #1a1a1a;
            transform: translateX(8px);
            box-shadow: 0 4px 15px rgba(0, 212, 255, 0.3);
        }

        /* Hamburger Menu */
        .hamburger {
            display: none;
            font-size: 28px;
            background: none;
            border: none;
            color: #00d4ff;
            cursor: pointer;
            padding: 10px;
            position: fixed;
            top: 15px;
            left: 15px;
            z-index: 1100;
            transition: color 0.3s ease;
        }

        .hamburger:hover {
            color: #00aaff;
        }

        /* Content Area */
        .content {
            margin-left: 250px;
            padding: 40px;
            width: calc(100% - 250px);
            transition: all 0.3s ease;
        }

        h1 {
            color: #00d4ff;
            text-align: center;
            margin-bottom: 30px;
            font-weight: 600;
            font-size: 32px;
            text-shadow: 0 2px 10px rgba(0, 212, 255, 0.3);
        }

        h2 {
            color: #e0e0e0;
            text-align: center;
            font-size: 24px;
            margin-bottom: 20px;
            font-weight: 600;
        }

        .section {
            background: #252525;
            padding: 20px;
            border-radius: 15px;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.5);
            transition: transform 0.3s ease;
            margin-bottom: 20px;
        }

        .section:hover {
            transform: translateY(-8px);
        }

        /* Filter Container */
        .filter-container {
            display: flex;
            align-items: center;
            gap: 15px;
            background: #2e2e2e;
            padding: 20px;
            border-radius: 15px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
            flex-wrap: wrap;
            justify-content: center;
        }

        select, input[type="date"] {
            padding: 10px 15px;
            border-radius: 25px;
            background: #333333;
            color: #e0e0e0;
            border: 1px solid #444;
            outline: none;
            font-size: 15px;
            transition: all 0.3s ease;
            min-width: 150px;
        }

        select:hover, select:focus, input[type="date"]:hover, input[type="date"]:focus {
            background: #00d4ff;
            color: #1a1a1a;
            border-color: #00d4ff;
            box-shadow: 0 0 8px rgba(0, 212, 255, 0.4);
        }

        button {
            padding: 10px 20px;
            border: none;
            border-radius: 25px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 600;
            font-size: 15px;
            background: #6b48ff;
            color: #fff;
            box-shadow: 0 4px 10px rgba(107, 72, 255, 0.3);
        }

        button:hover {
            background: #5636d9;
            transform: scale(1.05);
            box-shadow: 0 6px 15px rgba(107, 72, 255, 0.5);
        }

        #customDateInputs {
            display: flex;
            gap: 10px;
            align-items: center;
        }

        /* Overall Stats */
        .overall-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            padding: 25px;
            background: #2e2e2e;
            border-radius: 15px;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.5);
            margin-top: 20px;
        }

        .stat-box {
            text-align: center;
            padding: 20px;
            background: #333333;
            border-radius: 15px;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
        }

        .stat-box:hover {
            transform: scale(1.05);
            box-shadow: 0 6px 20px rgba(0, 212, 255, 0.3);
        }

        .stat-box h3 {
            margin-bottom: 12px;
            color: #e0e0e0;
            font-size: 18px;
            font-weight: 600;
        }

        .stat-box p {
            font-size: 24px;
            font-weight: bold;
            color: #00d4ff;
            text-shadow: 0 2px 5px rgba(0, 212, 255, 0.2);
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .sidebar {
                width: 100%;
                height: auto;
                transform: translateX(-100%);
            }

            .sidebar.active {
                transform: translateX(0);
            }

            .content {
                margin-left: 0;
                width: 100%;
                padding: 20px;
            }

            .hamburger {
                display: block;
            }

            .filter-container {
                flex-direction: column;
                gap: 10px;
            }

            select, input[type="date"] {
                width: 100%;
            }

            #customDateInputs {
                flex-direction: column;
                width: 100%;
            }

            .overall-stats {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <button class="hamburger">☰</button>
    <div class="sidebar">
        <h2>Sales Report</h2>
        <a href="/admin/dashboard">Dashboard</a>
        <a href="/admin/userManagement">Manage Users</a>
        <a href="/admin/CategoryManagement">Category Management</a>
        <a href="/admin/productManagement">Product Management</a>
        <a href="/admin/ordermanagment">Order Management</a>
        <a href="/admin/coupenMenagement">Coupon Management</a>
        <a href="/admin/SalesReport" class="active">Sales Report</a>
        <a href="/admin/AdminReturnRequest">Return Management</a>
        <a href="/admin/logout">Logout</a>
    </div>

    <div class="content">
        <div class="section">
            <h1>Sales Report</h1>
            <h2>MD-FURNITURE</h2>
        </div>

        <div class="filter-container">
            <label for="filter">Filter:</label>
            <select id="filter" onchange="toggleDateFields()">
                <option value="daily">Daily</option>
                <option value="weekly">Weekly</option>
                <option value="monthly">Monthly</option>
                <option value="yearly">Yearly</option>
                <option value="custom">Custom Date</option>
            </select>

            <div id="customDateInputs" style="display:none;">
                <label for="startDate">From:</label>
                <input type="date" id="startDate">
                <label for="endDate">To:</label>
                <input type="date" id="endDate">
            </div>

            <button onclick="fetchSalesReport()">Generate Report</button>
            <button onclick="downloadPDF()">Download PDF</button>
            <button onclick="downloadExcel()">Download Excel</button>
        </div>

        <div class="overall-stats">
            <div class="stat-box">
                <h3>Overall Sales Count</h3>
                <p id="overallSalesCount">0</p>
            </div>
            <div class="stat-box">
                <h3>Overall Order Amount</h3>
                <p id="overallOrderAmount">₹0</p>
            </div>
            <div class="stat-box">
                <h3>Overall Discount</h3>
                <p id="overallDiscount">₹0</p>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.1/xlsx.full.min.js"></script>
    <script>
        // Hamburger menu toggle
        const hamburger = document.querySelector('.hamburger');
        const sidebar = document.querySelector('.sidebar');
        hamburger.addEventListener('click', () => {
            sidebar.classList.toggle('active');
        });

        function toggleDateFields() {
            const filterType = document.getElementById("filter").value;
            const customDateInputs = document.getElementById("customDateInputs");
            customDateInputs.style.display = filterType === "custom" ? "flex" : "none";
        }

        function fetchSalesReport() {
            const filterType = document.getElementById("filter").value;
            let startDate = document.getElementById("startDate").value;
            let endDate = document.getElementById("endDate").value;

            if (filterType !== "custom") {
                const today = new Date();
                switch (filterType) {
                    case "daily":
                        startDate = endDate = today.toISOString().split("T")[0];
                        break;
                    case "weekly":
                        const weekStart = new Date(today);
                        weekStart.setDate(today.getDate() - 6);
                        startDate = weekStart.toISOString().split("T")[0];
                        endDate = today.toISOString().split("T")[0];
                        break;
                    case "monthly":
                        const monthStart = new Date(today.getFullYear(), today.getMonth(), 1);
                        startDate = monthStart.toISOString().split("T")[0];
                        endDate = today.toISOString().split("T")[0];
                        break;
                    case "yearly":
                        const yearStart = new Date(today.getFullYear(), 0, 1);
                        startDate = yearStart.toISOString().split("T")[0];
                        endDate = today.toISOString().split("T")[0];
                        break;
                }
            }

            if (!startDate || !endDate) {
                Swal.fire({
                    icon: "warning",
                    title: "Invalid Date Range",
                    text: "Please select a valid date range.",
                    background: '#252525',
                    color: '#e0e0e0',
                    confirmButtonColor: '#ff6f61'
                });
                return;
            }

            fetch(`/admin/ShowTheSalesReport?startDate=${startDate}&endDate=${endDate}`, {
                method: "POST",
                headers: { "Content-Type": "application/json" }
            })
            .then(response => response.json())
            .then(data => {
                if (data.salesCount && (!data.orderAmount || data.orderAmount === 0 || data.orderAmount === "") 
                    && (!data.discount || data.discount === 0 || data.discount === "")) {
                    Swal.fire({
                        icon: "info",
                        title: "No Sales Data",
                        text: "No sales data available for the selected date range.",
                        background: '#252525',
                        color: '#e0e0e0',
                        confirmButtonColor: '#00d4ff'
                    });
                    return;
                }

                document.getElementById("overallSalesCount").innerText = data.salesCount || 0;
                document.getElementById("overallOrderAmount").innerText = `₹${data.orderAmount || 0}`;
                document.getElementById("overallDiscount").innerText = `₹${data.discount || 0}`;
            })
            .catch(error => {
                console.error("Error fetching sales report:", error);
                Swal.fire({
                    icon: "error",
                    title: "Error",
                    text: "Failed to fetch sales report. Please try again later.",
                    background: '#252525',
                    color: '#e0e0e0',
                    confirmButtonColor: '#ff6f61'
                });
            });
        }

        function downloadPDF() {
    const { jsPDF } = window.jspdf;
    const doc = new jsPDF();

    doc.setFontSize(20);
    doc.setTextColor(0, 212, 255);
    doc.text("Sales Report", 20, 20);

    doc.setFontSize(12);
    doc.setTextColor(0, 0, 0); // Change text color to black

    const overallSalesCount = document.getElementById("overallSalesCount")?.innerText.trim() || "N/A";
    const overallOrderAmount = document.getElementById("overallOrderAmount")?.innerText.trim() || "N/A";
    const overallDiscount = document.getElementById("overallDiscount")?.innerText.trim() || "N/A";

    if (overallSalesCount === "0") {
        Swal.fire({
            icon: "error",
            title: "No Data Available",
            text: "There is no data to generate the sales report.",
            background: '#252525',
            color: '#e0e0e0',
            confirmButtonColor: '#ff6f61'
        });
        return;
    }

    doc.text(`Overall Sales Count: ${overallSalesCount}`, 20, 30);
    doc.text(`Overall Order Amount: ${overallOrderAmount}`, 20, 40);
    doc.text(`Overall Discount: ${overallDiscount}`, 20, 50);

    doc.save("sales_report.pdf");
}


        function downloadExcel() {
            const overallSalesCount = document.getElementById("overallSalesCount").innerText.trim();
            const overallOrderAmount = document.getElementById("overallOrderAmount").innerText.trim();
            const overallDiscount = document.getElementById("overallDiscount").innerText.trim();

            if (overallSalesCount === "0") {
                Swal.fire({
                    icon: "error",
                    title: "No Data Available",
                    text: "There is no data to generate the sales report.",
                    background: '#252525',
                    color: '#e0e0e0',
                    confirmButtonColor: '#ff6f61'
                });
                return;
            }

            const data = [
                ["Sales Report"],
                ["Overall Sales Count", overallSalesCount],
                ["Overall Order Amount", overallOrderAmount],
                ["Overall Discount", overallDiscount],
            ];

            const ws = XLSX.utils.aoa_to_sheet(data);
            const wb = XLSX.utils.book_new();
            XLSX.utils.book_append_sheet(wb, ws, "Sales Report");
            XLSX.writeFile(wb, "sales_report.xlsx");
        }
    </script>
</body>
</html>