<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>ADD Category</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
      background-color: #ffffff;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
    }
    .form-container {
      width: 100%;
      max-width: 400px;
      padding: 20px;
      background: #ffffff;
      border-radius: 20px;
      box-shadow: 0 2px 10px rgb(176, 0, 0);
    }
    .form-group {
      margin-bottom: 15px;
    }
    label {
      display: block;
      margin-bottom: 5px;
      font-weight: bold;
    }
    input, textarea, select, button {
      width: 97%;
      padding: 10px;
      border: 1px solid #004ef5;
      border-radius: 5px;
    }
    button {
      background-color: #007bff;
      color: #fff;
      font-weight: bold;
      cursor: pointer;
      border: none;
    }
    button:hover {
      background-color: #0056b3;
    }
    h2 {
      text-align: center;
    }
  </style>
</head>
<body>
  <div class="form-container">
    <h2>ADD</h2>
    <form id="updateForm">
      <!-- Name -->
      <div class="form-group">
        <label for="name">Name:</label>
        <input type="text" id="name" name="name" placeholder="Enter name" required>
      </div>
      
      <!-- Description -->
      <div class="form-group">
        <label for="description">Description:</label>
        <textarea id="description" name="description" rows="3" placeholder="Enter description" required></textarea>
      </div>
      
      <!-- Offer Price -->
      <div class="form-group">
        <label for="offerPrice">Offer Price:</label>
        <input type="number" id="offerPrice" name="offerPrice" placeholder="Enter offer price" required>
      </div>
      
      <!-- Status -->
      <div class="form-group">
        <label for="status">Status:</label>
        <select id="status" name="status" required>
          <option value="active">Active</option>
          <option value="inactive">Inactive</option>
        </select>
      </div>
      
      <!-- Submit Button -->
      <button type="submit">Update</button>
    </form>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
      function validateForm() {
      const name = document.getElementById("name").value
      const description = document.getElementById("description").value
      const offerPrice = document.getElementById('offerPrice').value
            
      if (!/^[a-zA-Z]+$/.test(name)) {
        alert('Name should not contain spaces or numbers.');
        return false;
    }
      if (/\s/.test(description)) {
        alert('Description should not contain spaces.');
        return false;
      }
      if (offerPrice <= 0) {
        alert('Offer Price should be a positive number.');
        return false;
      }
      return true;
    }
    
    document.getElementById('updateForm').addEventListener('submit', function(event) {
      event.preventDefault(); // Prevent the default form submission
      if (!validateForm()) {
        return; // Stop form submission if validation fails
      }
      // Collect form data
      const formData = {
        name: document.getElementById('name').value,
        description: document.getElementById('description').value,
        offerPrice: document.getElementById('offerPrice').value,
        status: document.getElementById('status').value,
      };

      // Send data via fetch
      fetch('/admin/addPost', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(formData),
      })
      .then((response) => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.json(); // Parse JSON response
      })
      .then((data) => {
        Swal.fire({
          title: 'Success!',
          text: 'Category added successfully!',
          icon: 'success',
          confirmButtonText: 'OK',
        }).then((result) => {
          if (result.isConfirmed) {
            window.location.href = '/admin/CategoryManagement'; // Redirect
          }
        });
      })
      .catch((error) => {
        Swal.fire({
          title: 'Error!',
          text: `Error adding category: ${error.message}`,
          icon: 'error',
          confirmButtonText: 'Try Again',
        });
      });
    });
  </script>
</body>
</html>
