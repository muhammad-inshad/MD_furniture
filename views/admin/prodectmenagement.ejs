<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Management</title>
    <link href="/admin/prodectmenagement.css" rel="stylesheet"> 
</head><style>/* Center the pagination */
    #pagination-form {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 10px;
        margin-top: 20px;
    }
    
    /* Styling buttons */
    #pagination-form button {
        background-color: #007bff; /* Primary blue */
        color: white;
        border: none;
        padding: 10px 15px;
        font-size: 14px;
        border-radius: 5px;
        cursor: pointer;
        transition: background 0.3s ease-in-out, transform 0.2s;
    }
    
    #pagination-form button:hover {
        background-color: #0056b3; /* Darker blue on hover */
        transform: scale(1.05); /* Slight zoom effect */
    }
    
    #pagination-form button:disabled {
        background-color: #ccc;
        cursor: not-allowed;
        transform: none;
    }
    
    /* Styling the page number */
    #page-number {
        font-size: 16px;
        font-weight: bold;
        padding: 8px 15px;
        background-color: #f8f9fa;
        border-radius: 5px;
        border: 1px solid #ccc;
        color: #333;
    }
    
    /* Make pagination responsive */
    @media (max-width: 600px) {
        #pagination-form {
            flex-wrap: wrap;
        }
        #pagination-form button {
            padding: 8px 12px;
            font-size: 12px;
        }
    }
    </style>
<body>
    <div class="sidebar">
        <h2>Product Management</h2>
        <a href="/admin/dashboard">Dashboard</a>
        <a href="/admin/userManagement">Manage Users</a>
        <a href="/admin/CategoryManagement">Category Management</a>
        <a href="/admin/productManagement">Product Management</a>
        <a href="/admin/ordermanagment">Order Management</a>
        <a href="/admin/coupenMenagement">Coupon Management</a>
        <a href="/admin/SalesReport">Sales Report</a>
        <a href="/admin/logout">Logout</a>
    </div>
    <div class="content">
        <div class="centered-container">
            <h1 class="heading">Product Management</h1>
            <div class="search-bar">
                <input type="text" id="searchBAR" placeholder="Search products..." class="search-input">
                <button class="add-button" id="searchBTN">Search</button>
                <form action="/admin/addproduct">
                    <button type="submit" class="add-button">Add Product</button>
                </form>
            </div>
        </div>
        <div class="table-container">
            <table id="product-table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Brand</th>
                        <th>category</th>
                        <th>Sale Price</th>
                        <th>Product Offer</th>
                        <th>Stock</th>
                        <th>Status</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (ProductDetiles && ProductDetiles.length > 0) { %>
                        <% ProductDetiles.forEach(product => { %>
                            <tr>
                                <td><%= product.productName %></td>
                                <td><%= product.description %></td>
                                <td><%= product.brand %></td>
                                <td><%=  product?.category?.name || "No Category"%></td>
                                <td><%= product.salePrice %></td>
                                <td><%= product.productOffer || "No Offer" %></td>
                                <td><%= product.quantity %></td>
                                <td><%= product.status %></td>
                                <td>
                                    <form action="/admin/viewOfProduct/<%= product._id %>" method="get">
                                        <button type="submit" class="ubtn">view</button>
                                    </form><br>
                                    <form action="/admin/updateProduct/<%= product._id %>" method="get">
                                        <button type="submit" class="ubtn">Update</button>
                                    </form><br>
                                    <form action="/admin/deleteProduct/<%= product._id %>" method="post">
                                        <button type="submit" class="ubtn">
                                            <%= product.isDeleted ? 'Restore' : 'Delete' %>
                                        </button>
                                    </form>
                                </td>
                            </tr>
                        <% }) %>
                    <% } else { %>
                        <tr>
                            <td colspan="8">No products found.</td>
                        </tr>
                    <% } %>
                </tbody>
            </table>

            <center>
                <form id="pagination-form" method="get" action="/admin/productManagement">
                    <input type="hidden" name="page" id="page-input"> <!-- Hidden input to store the page number -->
                    
                    <!-- Pagination Buttons -->
                    <button type="button" onclick="setPage(1)">First</button>
                    <button type="button" onclick="setPage(currentPage - 1)">Previous</button>
                    <span id="page-number"><%= currentPage %></span> <!-- Initial page number from the backend -->
                    <button type="button" onclick="setPage(currentPage + 1)">Next</button>
                    <button type="button" onclick="setPage(totalPages)">Last</button>
                </form>
            </center>
            
                  
        </div>
    </div>
    
    <script>
let currentPage = <%= currentPage %>; // Initial current page from backend
const totalPages = <%= totalPages %>; // Total pages from backend

function setPage(page) {
    // Prevent invalid page numbers
    if (page < 1 || page > totalPages) return;

    // Update currentPage and display it
    currentPage = page;
    document.getElementById("page-number").innerText = currentPage;

    // Set the hidden input value for the form
    document.getElementById("page-input").value = currentPage;

    // Submit the form to reload the page with updated data
    document.getElementById("pagination-form").submit();
}

function displayUsers(products) {
    console.log(products);
    const tableBody = document.getElementById("product-table").querySelector("tbody");;
    tableBody.innerHTML = ""; // Clear existing rows
    
    products.forEach(product => {

        const row = document.createElement("tr");

        row.innerHTML = `
            <td>${product.productName}</td>
            <td>${product.description}</td>
            <td>${product.brand}</td>
            <td>${product.category.name}</td>
            <td>${product.salePrice}</td>
            <td>${product.productOffer || "No Offer"}</td>
            <td>${product.quantity}</td>
            <td>${product.status}</td>
               <td>
                 <form action="/admin/viewOfProduct${product._id}" method="get">
                 <button type="submit" class="ubtn">view</button>
                 </form>
                <form action="/admin/updateProduct/${product._id}" method="post">
                    <button type="submit" class="ubtn">Update</button>
                </form>
                <form action="/admin/deleteProduct/${product._id}" method="post">
                    <button type="submit" class="ubtn">Delete</button>
                </form>
            </td>
        `;

        tableBody.appendChild(row);
    });
}



document.getElementById("searchBTN").addEventListener("click", async (e) => {
    e.preventDefault();
    const inputValue = document.getElementById("searchBAR").value.trim();

    if (!inputValue) {
        console.warn("Search input is empty!");
        window.location.href ="/admin/productManagement"
        return;
    }

    try {
        const response = await fetch("/admin/search-product", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ searchKey: inputValue })
        });

        const data = await response.json();
        if (data.success) {
            displayUsers(data.result); // Display fetched products
        } else {
            console.error("Search failed:", data.message);
        }
    } catch (error) {
        console.log("Error:", error);
    }
});

    </script>

   
</body>
</html>