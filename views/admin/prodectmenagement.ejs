<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Management</title>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js" integrity="sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #1a1a1a, #2c2c2c);
            color: #fff;
            display: flex;
            min-height: 100vh;
        }

        /* Sidebar */
        .sidebar {
            width: 250px;
            background: #252525;
            padding: 20px;
            position: fixed;
            height: 100vh;
            top: 0;
            left: 0;
            transition: 0.3s ease;
            box-shadow: 4px 0 15px rgba(0, 0, 0, 0.5);
        }

        .sidebar h2 {
            text-align: center;
            margin-bottom: 30px;
            color: #00d4ff;
            font-size: 24px;
            letter-spacing: 1px;
        }

        .sidebar a {
            display: flex;
            align-items: center;
            color: #ddd;
            text-decoration: none;
            padding: 12px 15px;
            margin: 10px 0;
            border-radius: 8px;
            transition: all 0.3s ease;
            font-size: 16px;
        }

        .sidebar a:hover, .sidebar a.active {
            background: #00d4ff;
            color: #1a1a1a;
            transform: translateX(5px);
        }

        /* Hamburger Menu */
        .hamburger {
            display: none;
            font-size: 24px;
            background: none;
            border: none;
            color: #fff;
            cursor: pointer;
            padding: 10px;
            position: fixed;
            top: 10px;
            left: 10px;
            z-index: 1100;
        }

        /* Content Area */
        .content {
            margin-left: 270px;
            padding: 30px;
            width: calc(100% - 270px);
            transition: 0.3s ease;
        }

        h1 {
            color: #00d4ff;
            text-align: center;
            margin-bottom: 20px;
            font-weight: 600;
            font-size: 28px;
        }

        .section {
            background: #2e2e2e;
            padding: 25px;
            border-radius: 12px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
            transition: transform 0.3s ease;
        }

        .section:hover {
            transform: translateY(-5px);
        }

        /* Search Bar */
        .search-bar {
            display: flex;
            gap: 10px;
            justify-content: center;
            margin-bottom: 20px;
            flex-wrap: wrap;
        }

        .search-input {
            padding: 10px 15px;
            border-radius: 20px;
            background: #3a3a3a;
            color: #fff;
            border: none;
            outline: none;
            width: 300px;
            transition: all 0.3s ease;
            font-size: 16px;
        }

        .search-input:focus {
            background: #fff;
            color: #1a1a1a;
        }

        .add-button, .search-button {
            padding: 10px 20px;
            background: #00d4ff;
            color: #1a1a1a;
            border: none;
            border-radius: 20px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 600;
            font-size: 16px;
        }

        .add-button:hover, .search-button:hover {
            background: #00aaff;
            transform: scale(1.05);
        }

        /* Table Styling */
        .table-container {
            overflow-x: auto;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            background: #252525;
            border-radius: 12px;
            overflow: hidden;
        }

        th, td {
            padding: 15px;
            text-align: left;
            font-size: 16px;
        }

        th {
            background: #3a3a3a;
            color: #00d4ff;
            text-transform: uppercase;
            letter-spacing: 1px;
            font-weight: 600;
        }

        tr {
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            transition: background 0.3s ease;
        }

        tr:hover {
            background: rgba(255, 255, 255, 0.05);
        }

        /* Description Column */
        td.description {
            max-width: 300px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        td.description:hover {
            white-space: normal; /* Show full text on hover */
            word-wrap: break-word;
        }

        .ubtn {
            padding: 8px 15px;
            border: none;
            border-radius: 20px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 600;
            margin: 5px 0;
            display: block;
            width: 100%;
            text-align: center;
            font-size: 14px;
        }

        .ubtn.view {
            background: #ffd700;
            color: #1a1a1a;
        }

        .ubtn.update {
            background: #6b48ff;
            color: #fff;
        }

        .ubtn.delete {
            background: #ff6f61;
            color: #fff;
        }

        .ubtn.restore {
            background: #00d4ff;
            color: #1a1a1a;
        }

        .ubtn:hover {
            transform: scale(1.05);
        }

        .ubtn.view:hover {
            background: #e6c200;
        }

        .ubtn.update:hover {
            background: #5636d9;
        }

        .ubtn.delete:hover {
            background: #ff4d3f;
        }

        .ubtn.restore:hover {
            background: #00aaff;
        }

        /* Pagination */
        #pagination-form {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 10px;
            margin-top: 20px;
            flex-wrap: wrap;
        }

        #pagination-form button {
            background: #00d4ff;
            color: #1a1a1a;
            border: none;
            padding: 10px 15px;
            border-radius: 20px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 600;
            font-size: 16px;
        }

        #pagination-form button:hover {
            background: #00aaff;
            transform: scale(1.05);
        }

        #pagination-form button:disabled {
            background: #3a3a3a;
            cursor: not-allowed;
            transform: none;
        }

        #page-number {
            padding: 8px 15px;
            background: #3a3a3a;
            border-radius: 20px;
            font-weight: 600;
            font-size: 16px;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .sidebar {
                width: 100%;
                height: auto;
                position: fixed;
                z-index: 1000;
                transform: translateX(-100%);
            }

            .sidebar.active {
                transform: translateX(0);
            }

            .content {
                margin-left: 0;
                width: 100%;
            }

            .hamburger {
                display: block;
            }

            .search-input {
                width: 100%;
            }

            td.description {
                max-width: 100%;
            }
        }
    </style>
</head>
<body>
    <button class="hamburger">â˜°</button>
    <div class="sidebar">
        <h2>Admin Dashboard</h2>
        <a href="/admin/dashboard">Dashboard</a>
        <a href="/admin/userManagement">Manage Users</a>
        <a href="/admin/CategoryManagement">Category Management</a>
        <a href="/admin/productManagement" class="active">Product Management</a>
        <a href="/admin/ordermanagment">Order Management</a>
        <a href="/admin/coupenMenagement">Coupon Management</a>
        <a href="/admin/SalesReport">Sales Report</a>
        <a href="/admin/AdminReturnRequest">Return Management</a>
        <a href="/admin/logout">Logout</a>
    </div>

    <div class="content">
        <div class="section">
            <h1>Product Management</h1>
            <div class="search-bar">
                <input type="text" id="searchBAR" placeholder="Search products..." class="search-input">
                <button class="search-button" id="searchBTN">Search</button>
                <form action="/admin/addproduct">
                    <button type="submit" class="add-button">+ Add Product</button>
                </form>
            </div>

            <div class="table-container">
                <table id="product-table">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Description</th>
                            <th>Brand</th>
                            <th>Category</th>
                            <th>Sale Price</th>
                            <th>Product Offer</th>
                            <th>Stock</th>
                            <th>Status</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (ProductDetiles && ProductDetiles.length > 0) { %>
                            <% ProductDetiles.forEach(product => { %>
                                <tr>
                                    <td><%= product.productName %></td>
                                    <td class="description" title="<%= product.description %>"><%= product.description %></td>
                                    <td><%= product.brand %></td>
                                    <td><%= product?.category?.name || "No Category" %></td>
                                    <td><%= product.salePrice %></td>
                                    <td><%= product.productOffer || "No Offer" %></td>
                                    <td><%= product.quantity %></td>
                                    <td><%= product.status %></td>
                                    <td>
                                        <form action="/admin/viewOfProduct/<%= product._id %>" method="get">
                                            <button type="submit" class="ubtn view">View</button>
                                        </form>
                                        <form action="/admin/updateProduct/<%= product._id %>" method="get">
                                            <button type="submit" class="ubtn update">Update</button>
                                        </form>
                                        <form id="deleteForm-<%= product._id %>" data-id="<%= product._id %>">
                                            <button type="button" class="ubtn <%= product.isDeleted ? 'restore' : 'delete' %>" 
                                                    onclick="toggleDelete('<%= product._id %>', <%= product.isDeleted %>)">
                                                <%= product.isDeleted ? 'Restore' : 'Delete' %>
                                            </button>
                                        </form>
                                    </td>
                                </tr>
                            <% }) %>
                        <% } else { %>
                            <tr>
                                <td colspan="9" class="text-center">No products found.</td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>

            <form id="pagination-form" method="get" action="/admin/productManagement">
                <input type="hidden" name="page" id="page-input">
                <button type="button" onclick="setPage(1)">First</button>
                <button type="button" onclick="setPage(currentPage - 1)">Previous</button>
                <span id="page-number"><%= currentPage %></span>
                <button type="button" onclick="setPage(currentPage + 1)">Next</button>
                <button type="button" onclick="setPage(totalPages)">Last</button>
            </form>
        </div>
    </div>

    <script>
        // Hamburger menu toggle
        const hamburger = document.querySelector('.hamburger');
        const sidebar = document.querySelector('.sidebar');
        hamburger.addEventListener('click', () => {
            sidebar.classList.toggle('active');
        });

        // Truncate description to 20 words
        function truncateDescription() {
            document.querySelectorAll('td.description').forEach(td => {
                const fullText = td.getAttribute('title');
                const words = fullText.split(' ');
                if (words.length > 20) {
                    td.textContent = words.slice(0, 20).join(' ') + '...';
                }
            });
        }

        // Run truncation on page load
        window.addEventListener('load', truncateDescription);

        // Pagination
        let currentPage = <%= currentPage %>;
        const totalPages = <%= totalPages %>;

        function setPage(page) {
            if (page < 1 || page > totalPages) return;
            currentPage = page;
            document.getElementById("page-number").innerText = currentPage;
            document.getElementById("page-input").value = currentPage;
            document.getElementById("pagination-form").submit();
        }

        // Search functionality
        document.getElementById("searchBTN").addEventListener("click", async (e) => {
            e.preventDefault();
            const inputValue = document.getElementById("searchBAR").value.trim();

            if (!inputValue) {
                window.location.href = "/admin/productManagement";
                return;
            }

            try {
                const response = await fetch("/admin/search-product", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ searchKey: inputValue })
                });

                const data = await response.json();
                if (data.success) {
                    displayUsers(data.result);
                } else {
                    console.error("Search failed:", data.message);
                }
            } catch (error) {
                console.log("Error:", error);
            }
        });

        function displayUsers(products) {
            const tableBody = document.getElementById("product-table").querySelector("tbody");
            tableBody.innerHTML = "";

            products.forEach(product => {
                const row = document.createElement("tr");
                row.innerHTML = `
                    <td>${product.productName}</td>
                    <td class="description" title="${product.description}">${product.description}</td>
                    <td>${product.brand}</td>
                    <td>${product?.category?.name || "No Category"}</td>
                    <td>${product.salePrice}</td>
                    <td>${product.productOffer || "No Offer"}</td>
                    <td>${product.quantity}</td>
                    <td>${product.status}</td>
                    <td>
                        <form action="/admin/viewOfProduct/${product._id}" method="get">
                            <button type="submit" class="ubtn view">View</button>
                        </form>
                        <form action="/admin/updateProduct/${product._id}" method="get">
                            <button type="submit" class="ubtn update">Update</button>
                        </form>
                        <form id="deleteForm-${product._id}" data-id="${product._id}">
                            <button type="button" class="ubtn ${product.isDeleted ? 'restore' : 'delete'}" 
                                    onclick="toggleDelete('${product._id}', ${product.isDeleted})">
                                ${product.isDeleted ? 'Restore' : 'Delete'}
                            </button>
                        </form>
                    </td>
                `;
                tableBody.appendChild(row);
            });
            truncateDescription(); // Reapply truncation after updating table
        }

        // Delete/Restore Functionality
        async function toggleDelete(productId, isDeleted) {
            try {
                const response = await fetch(`/admin/deleteProduct/${productId}`, {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ isDeleted: !isDeleted })
                });

                const data = await response.json();

                if (response.ok) {
                    Swal.fire({
                        icon: "success",
                        title: isDeleted ? "Restored!" : "Deleted!",
                        text: `Product has been ${isDeleted ? "restored" : "deleted"} successfully.`,
                        confirmButtonColor: "#00d4ff"
                    }).then(() => {
                        const button = document.querySelector(`#deleteForm-${productId} button`);
                        button.textContent = isDeleted ? "Delete" : "Restore";
                        button.classList.toggle('delete', isDeleted);
                        button.classList.toggle('restore', !isDeleted);
                        button.setAttribute("onclick", `toggleDelete('${productId}', ${!isDeleted})`);
                    });
                } else {
                    Swal.fire({
                        icon: "error",
                        title: "Error",
                        text: data.message || "Something went wrong!",
                        confirmButtonColor: "#ff6f61"
                    });
                }
            } catch (error) {
                console.error("Error:", error);
                Swal.fire({
                    icon: "error",
                    title: "Error",
                    text: "An error occurred. Please try again.",
                    confirmButtonColor: "#ff6f61"
                });
            }
        }
    </script>
</body>
</html>